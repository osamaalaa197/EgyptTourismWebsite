@using Newtonsoft.Json;
@model List<Accommodation>


<h1>Filter Results</h1>

 <script>
     //script to handel the filtered data 
    var accommodations = @Html.Raw(JsonConvert.SerializeObject(Model));
   // var layers = [...map.getLayers().getArray()]
    labels = document.querySelectorAll('#layers input,#lb');
    labels.forEach(label => {
     label.remove();
});



    for (let i = 0; i < accommodations.length; i++) {
        const typeId = accommodations[i].TypeId;
      if (typeId === 1) {
        hoteldata.push(accommodations[i]);
      } else if (typeId === 2) {
        resortdata.push(accommodations[i]);
      } else if (typeId === 3) {
        moteldata.push(accommodations[i]);
      }
    }
    if (hoteldata.length > 0) {
      
        map.addLayer(creatFeatures(hoteldata, "placeholder.png", "Hotel Filtered"));
    }
    if (resortdata.length > 0) { 
       
            map.addLayer(creatFeatures(resortdata, "orange.png", "Resort Filtered"));
    }
    if (moteldata.length > 0) {
        
            map.addLayer(creatFeatures(moteldata, "blue.png", "motel Filtered"));
    
    }
    if (hoteldata.length == 1) {
        console.log(hoteldata[0].X)
        let coords = ol.proj.transform(
            [hoteldata[0].Y, hoteldata[0].X],
            "EPSG:4326",
            "EPSG:3857"
        );

        map.getView().animate({
            zoom: 15,
            center: coords
        });
    }

    else if (moteldata.length == 1) {

        let coords = ol.proj.transform(
            [moteldata[0].Y, moteldata[0].X],
            "EPSG:4326",
            "EPSG:3857"
        );

        map.getView().animate({
            zoom: 15,
            center: coords
        });
    }

    else if (resortdata.length == 1) {

        let coords = ol.proj.transform(
            [resortdata[0].Y, resortdata[0].X],
            "EPSG:4326",
            "EPSG:3857"
        );

        map.getView().animate({
            zoom: 15,
            center: coords
        });
    }
    creatLayerListHandelCheckBox(map);
    hoteldata=[];
    resortdata=[];
    moteldata=[];
 </script>
 <div>
    @foreach (var place in Model)
    {

                                                <div class="wrapper">
                                <div class="card_s">
                                            <img src="/Images/@place.Image" alt="" srcset="">
                                    <div class="descriptions">
                                                <h3 class="">@place.Name</h3>
                                        <p>
                        @place.Description   </p>
                                                    <div class="rating">
                        @for (int i = 0; i < place.Rate; i++)
                        {
                                                        <span class="fa fa-star checked" style="color:gold"></span>
                        }
                        @for (int i = place.Rate; i < 5; i++)
                        {
                                                        <span class="fa fa-star"></span>
                        }
                                        </div>
                                                                                                    <pr>@place.Type.Type</pr>

                                                    <pr>@place.Price EGP</pr>
                                            <button>
                                                    <a href="@Url.Action("Details", "Accommodation", new { id = place.Id })">Readmore</a>
                                        </button>
                                    </div>
                                </div>
                            </div>




   

    }
            </div>













   @* @foreach (var place in Model)
    {
        <div class="col-md-3 mb-4" style="display:inline-block">
            <div class="card">
                <img class="card-img-top" src="/Images/@place.Image" alt="@place.Name">
                <div class="card-body">
                    <h5 class="card-title">@place.Name</h5>
                    <p class="card-text">@place.Description</p>
                    <p class="card-text">@place.Type.Type</p>
                    <p class="card-text">@place.Price</p>
                    <div class="rating">
                        @for (int i = 0; i < place.Rate; i++)
                        {
                            <span class="fa fa-star checked" style="color:gold"></span>
                        }
                        @for (int i = place.Rate; i < 5; i++)
                        {
                            <span class="fa fa-star"></span>
                        }
                    </div>
                    <a href="@Url.Action("Details", "Accomodation", new { id = place.Id })" class="btn btn-primary">View Details</a>
                </div>
            </div>
        </div>
    }
</div>*@
<style>


     .slider-container {

/*        position: relative;
*/
    }

    .slider {
        overflow-x: scroll;


            white-space: nowrap;

/*        transition: 0.5s ease-in-out;
*/ 
    }

        .slider::-webkit-scrollbar {
            display: none; /* Add this to remove the scroll bar */
        }

       /* .slider .card {
            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
            transition: 0.3s;
            border-radius: 5px;
            width: 250px;
            margin: 10px;
            display: inline-block;
        }

            .slider .card:hover {
                box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);
            }

            .slider .card img {
                border-radius: 5px 5px 0 0;
                width: 100%;
                height: 150px;
                object-fit: cover;
            }

            .slider .card .card-body {
                padding: 10px;
            }*/

    .slider-controls {
        display: block;
        width: 100%;
        display: flex;
        justify-content: space-between;
        z-index: 5;
    }

    .slider-btn {
        background: none;
        border: none;
        color: white;
        font-size: 20px;
        cursor: pointer;
        transition: color 0.3s;
    }

        .slider-btn:hover {
            color: #ccc;
        }

    .slider-prev-btn {
        color: gold;
        margin-left: 10px;
    }

    .slider-next-btn {
        color: gold;
        margin-right: 10px;
    }







.wrapper{
/*    position: absolute;
    top:50%;
    left:50%;*/
/*    transform: translate(-50%, -50%);
*/   
width:430px;

/*    max-width: 350px;
    height:auto;*/

   /* display: flex;
    flex-wrap: wrap;
    justify-content: space-between;*/

       display: inline-block;  /*test/**/

}
.card_s{
   /* flex: 1;
    flex-basis: 300px;
    flex-grow: 0;*/
    height: 400px;
    background: #fff;
    border: 2px solid #fff;
    box-shadow: 0px 4px 7px rgba(0,0,0,.5);
    cursor: pointer;
    transition: all .5s cubic-bezier(.8,.5,.2,1.4);
    overflow: hidden;

    position: relative;


}

.card_s img{
    width: 100%;
    height:100%;
    transition: all .5s cubic-bezier(.8,.5,.2,1.4);
}
.descriptions{

    position: absolute;

    top:0px;
    left:0px;

    background-color: rgba(255,255,255,.7);
    width:100%;
    height:100%;
    transition: all .7s ease-in-out;
    padding: 20px;
    box-sizing: border-box;
    clip-path: circle(0% at 100% 100%);
    white-space: normal;

}
.card_s:hover .descriptions{
    left:0px;
    transition: all .7s ease-in-out;
    clip-path: circle(75%);
}
.card_s:hover{
    transition: all .5s cubic-bezier(.8,.5,.2,1.4);
    box-shadow: 0px 2px 3px rgba(0,0,0,.3);
    transform: scale(.97);
}
.card_s:hover img{
    transition: all .5s cubic-bezier(.8,.5,.2,1.4);
    transform: scale(1.6) rotate(20deg);
    filter: blur(3px);
}
.card_s h3{
    color: #ff3838;
    letter-spacing: 1px;
    margin: 0px;
}
.card_s p{

    line-height: 24px;
    height: 180px;
    overflow-y: clip;
}
.card_s pr{

    display:block;
}
.card_s button{
    width: fit-content;
    height: 40px;
    cursor: pointer;
    border-style: none;
    background-color: #ff3838;
    color:#fff;
    font-size: 15px;
    outline: none;
    box-shadow: 0px 2px 3px rgba(0,0,0,.4);
    transition: all .5s ease-in-out;
}
.card_s button:hover{
    transform: scale(.95) translateX(-5px);
    transition: all .5s ease-in-out;
}



    /*.form-group{
        display:flex;
    }*/
</style>
